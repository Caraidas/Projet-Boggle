{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nidal\\\\Documents\\\\BUT2\\\\Boggle\\\\Projet-Boggle\\\\froggle-website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Background from './components/Background';\nimport VolumeSlider from './components/VolumeSlider';\nimport Home from './pages/home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // pour ouvrir et fermer le slider\n  const [isSoundOpen, setIsOpen] = useState(false);\n  // pour le volume du son\n  const [soundVolume, setVolume] = useState(100);\n  // pour le volume de la musique\n  const [musicVolume, setMusicVolume] = useState(100);\n  const toggleSound = () => {\n    setIsOpen(!isSoundOpen);\n  };\n  const changeSoundVolume = value => {\n    setVolume(value);\n  };\n  const changeMusicVolume = value => {\n    setVolume(value);\n  };\n  setTimeout(function () {\n    if (isSoundOpen) {\n      toggleSound();\n    }\n  }, 5000);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          soundVolume: soundVolume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 38\n        }, this),\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VolumeSlider, {\n      isSoundOpen: isSoundOpen,\n      toggleSound: toggleSound,\n      changeSoundVolume: changeSoundVolume\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BbbW8c+B7efi6oK2Ip292Ae801s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Background","VolumeSlider","Home","jsxDEV","_jsxDEV","App","_s","isSoundOpen","setIsOpen","soundVolume","setVolume","musicVolume","setMusicVolume","toggleSound","changeSoundVolume","value","changeMusicVolume","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","exact","_c","$RefreshReg$"],"sources":["C:/Users/Nidal/Documents/BUT2/Boggle/Projet-Boggle/froggle-website/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport './App.css';\nimport Background from './components/Background';\nimport VolumeSlider from './components/VolumeSlider';\nimport Home from './pages/home';\n\nfunction App() {\n  // pour ouvrir et fermer le slider\n  const [isSoundOpen, setIsOpen] = useState(false);\n  // pour le volume du son\n  const [soundVolume, setVolume] = useState(100);\n  // pour le volume de la musique\n  const [musicVolume, setMusicVolume] = useState(100);\n\n  const toggleSound = () => {\n    setIsOpen(!isSoundOpen);\n  }\n\n  const changeSoundVolume = (value) => {\n    setVolume(value);\n  }\n\n  const changeMusicVolume = (value) => {\n    setVolume(value);\n  }\n\n  setTimeout(function() { \n    if (isSoundOpen) {\n      toggleSound();\n    }\n  }, 5000);\n\n  return (\n    <Router>\n      <Background />\n      <Routes>\n        <Route path='/home' element={<Home soundVolume={soundVolume}/>} exact/>\n      </Routes>\n      <VolumeSlider isSoundOpen={isSoundOpen} toggleSound={toggleSound} changeSoundVolume={changeSoundVolume} />\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AACvE,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAChD;EACA,MAAM,CAACc,WAAW,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC;EAC9C;EACA,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,GAAG,CAAC;EAEnD,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxBL,SAAS,CAAC,CAACD,WAAW,CAAC;EACzB,CAAC;EAED,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnCL,SAAS,CAACK,KAAK,CAAC;EAClB,CAAC;EAED,MAAMC,iBAAiB,GAAID,KAAK,IAAK;IACnCL,SAAS,CAACK,KAAK,CAAC;EAClB,CAAC;EAEDE,UAAU,CAAC,YAAW;IACpB,IAAIV,WAAW,EAAE;MACfM,WAAW,EAAE;IACf;EACF,CAAC,EAAE,IAAI,CAAC;EAER,oBACET,OAAA,CAACP,MAAM;IAAAqB,QAAA,gBACLd,OAAA,CAACJ,UAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACdlB,OAAA,CAACN,MAAM;MAAAoB,QAAA,eACLd,OAAA,CAACL,KAAK;QAACwB,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEpB,OAAA,CAACF,IAAI;UAACO,WAAW,EAAEA;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;QAACG,KAAK;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChE,eACTlB,OAAA,CAACH,YAAY;MAACM,WAAW,EAAEA,WAAY;MAACM,WAAW,EAAEA,WAAY;MAACC,iBAAiB,EAAEA;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnG;AAEb;AAAChB,EAAA,CAnCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}